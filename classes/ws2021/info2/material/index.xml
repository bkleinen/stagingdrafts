<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Info 2 WS 2021/22 - Material on Prof. Dr. Barne Kleinen</title><link>https://bkleinen.github.io/staging/classes/ws2021/info2/material/</link><description>Recent content in Info 2 WS 2021/22 - Material on Prof. Dr. Barne Kleinen</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://bkleinen.github.io/staging/classes/ws2021/info2/material/index.xml" rel="self" type="application/rss+xml"/><item><title>Repetition - Finger Exercises</title><link>https://bkleinen.github.io/staging/classes/ws2021/info2/material/00_repetition_info1_finger_exercises/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/staging/classes/ws2021/info2/material/00_repetition_info1_finger_exercises/</guid><description>This is a small collection of programming finger exercises to get you back to programming java, and to get to know your new programming environment.
I&amp;rsquo;ve numbered them for easier referencing in the Q&amp;amp;A.
Basic Exercises Finger Exercise 1: Count 0s in an array Write a method that takes an integer array as parameter and returns the number of 0 contained in it.
Finger Exercise 2: Count occurrences of an character in a String Write a method that takes a String s and a character c as parameters and returns the number of occurrences of c in s.</description></item><item><title>Repetition - Terms</title><link>https://bkleinen.github.io/staging/classes/ws2021/info2/material/02_terms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/staging/classes/ws2021/info2/material/02_terms/</guid><description>These are the Terms from the Info1 Book. Chapter Term chapter 01 01 object 01 class 01 instance 01 method 01 signature 01 parameter 01 type 01 state 01 source code 01 return value / result 01 method calling 01 compiler chapter 02 02 field / instance variable 02 constructor 02 method 02 method signature 02 method body 02 parameter 02 accessor method 02 mutator method 02 declaration 02 initialization 02 block 02 statement 02 assignment statement 02 conditional statement 02 return statement 02 result type 02 comment 02 expression boolean expression 02 operator 02 variable 02 local variable 02 scope 02 lifetime 02 actual parameter 02 formal parameters chapter 03 03 abstraction 03 object creation 03 modularization 03 divide and conquer 03 class diagram 03 object diagram 03 instance diagram 03 object reference 03 overloading 03 internal method call 03 external method call 03 dot notation 03 debugger 03 breakpoint 03 classes define types 03 primitive type chapter 04 + 07 04 collection 04 array 04 iterator 04 for-each-loop 04 while loop 04 for loop 04 index 04 import statement 04 library 04 package 04 anonymous object 04 null 05 chapter 05 05 lambda 05 functional style 05 streams 05 filter 05 map 05 reduce 05 pipeline chapter 06 06 interface 06 implementation 06 map 06 set 06 javadoc 06 access modifier 06 information hiding 06 coupling 06 class variable 06 static 06 constant 06 final 06 java library 06 library documentation 06 documentation 06 immutable 06 static variables chapter 09 09 testing 09 debugging 09 positive testing 09 negative testing 09 assertion 09 fixture 09 walkthrough chapter 08 08 coupling 08 cohesion 08 code duplication 08 encapsulation 08 responsibility-driven design 08 localizing change 08 method cohesion 08 class cohesion 08 refactoring 08 switch statement chapter 10 10 inheritance 10 superclass (parent), 10 subclass (child) 10 is-a 10 inheritance hierarchy 10 superclass constructors 10 reuse 10 abstract class 10 subtype 10 substituion 10 variables and subtypes 10 polymorphic variable 10 cast 10 object 10 autoboxing 10 wrapper classes chapter 11 11 static type 11 dynamic type 11 overriding 11 method polymorphism 11 toString 11 protected 11 redefinition 11 method lookup 11 method dispatch 11 method polymorphism chapter 11 12 abstract method 12 abstract class 12 concrete class 12 abstract subclass 12 multiple inheritance 12 interface (java construct) 12 implements (keyword) chapter 13 (not covered) 13 swing 13 component 13 layout 13 event 13 event handling 13 event listener 13 frame 13 menu bar 13 menu menu item 13 content pane 13 modal dialog 13 anonymous inner class 13 final variable 13 image formats chapter 14 14 exception 14 unchecked exception 14 checked exception 14 exception handler 14 assertion 14 serialization</description></item><item><title>IntelliJ &amp; Tools</title><link>https://bkleinen.github.io/staging/classes/ws2021/info2/material/03_ide/</link><pubDate>Fri, 08 Oct 2021 20:33:18 +0200</pubDate><guid>https://bkleinen.github.io/staging/classes/ws2021/info2/material/03_ide/</guid><description>Robert Sedgewick, Princeton University, Kevin Wayne: Introduction to Programming in Python: An Interdisciplinary Approach. Addison Wesley: 2015.
https://introcs.cs.princeton.edu/python/home/</description></item><item><title>Python2</title><link>https://bkleinen.github.io/staging/classes/ws2021/info2/material/python2/</link><pubDate>Fri, 08 Oct 2021 20:21:37 +0200</pubDate><guid>https://bkleinen.github.io/staging/classes/ws2021/info2/material/python2/</guid><description/></item><item><title>Info 2 Material - Algorithms and Data Structures</title><link>https://bkleinen.github.io/staging/classes/ws2021/info2/material/algorithms_and_datastructures/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/staging/classes/ws2021/info2/material/algorithms_and_datastructures/</guid><description>Textbooks and Material Algorithms Illuminated is a book Series by Tim Roughgarden. The Companion Website contains Videos on a wide variety of algorithms and data structures: http://www.algorithmsilluminated.org/
Algorithms and Data Structures in General The broader topic of this course is Algorithms and Data Structures. You&amp;rsquo;ll find lots of textbooks and other material on this general and all of it singular topics. I picked out three textbooks:
Overview Detailed Info</description></item><item><title>Info 2 Python</title><link>https://bkleinen.github.io/staging/classes/ws2021/info2/material/python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/staging/classes/ws2021/info2/material/python/</guid><description>Automate the Boring Stuff with Python, 2nd Edition: Practical Programming for Total Beginners Paperback â€“ Illustrated, 12 Nov. 2019 English edition by Al Sweigart (Autor) 4.7 out of 5 stars 1,540 ratings
https://www.youtube.com/watch?v=7qHMXu99d88&amp;amp;list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW&amp;amp;index=2
Intro Learn python with unit tests: https://github.com/htw-imi-info2/learn-python-with-tests/tree/ws2018
Algorithms and Datastructure Examples from &amp;ldquo;Introduction to Programming in Python&amp;rdquo; Home Page of the Book: Introduction to Programming in Python
Installation You need to install a couple of additional packages to be able to run most of the examples in the book.</description></item></channel></rss>