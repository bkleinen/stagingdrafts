<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Material on STAGING DRAFTS --- Prof. Dr. Barne Kleinen</title><link>https://bkleinen.github.io/stagingdrafts/material/</link><description>Recent content in Material on STAGING DRAFTS --- Prof. Dr. Barne Kleinen</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 10 Feb 2024 13:11:06 +0100</lastBuildDate><atom:link href="https://bkleinen.github.io/stagingdrafts/material/index.xml" rel="self" type="application/rss+xml"/><item><title>Code Highlighting</title><link>https://bkleinen.github.io/stagingdrafts/material/hugo/code_highlighting/</link><pubDate>Sat, 23 Oct 2021 08:44:57 +0200</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/hugo/code_highlighting/</guid><description>Syntax Highlighting Tryout Notes:
switch off javascript that adds bootstrap styles to tables in frontmatter: NoStripedTables: true
many styles available, they can either be set in config (see markup.toml) or with the setting noClasses=false via stylesheets. see syntax-xxx.scss
Hugo Doc
Chroma Styles:
Chroma Style Gallery Longer Example from page: 199 // ... code Without anything $ ls -lart Bash 199 200 201 $ ls -lart some output 199 200 # ls -lart asdffs style = &amp;lsquo;monokai&amp;rsquo;</description></item><item><title>About Mermaid</title><link>https://bkleinen.github.io/stagingdrafts/material/mermaid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/mermaid/</guid><description>Mermaid renders diagrams from simple markdown code. It can be used
via integrating the available js library (yarn add mermaid), online via Mermaid-Live, is available in Github markdown files (and others) and can be easily integrated into hugo1 Here are some examples taken from Mermaid Live:
stateDiagram-v2 [*] --> Still Still --> [*] Still --> Moving Moving --> Still Moving --> Crash Crash --> [*] flowchart TD A[Christmas] --&amp;gt;|Get money| B(Go shopping) B --&amp;gt; C{Let me think} C --&amp;gt;|One| D[Laptop] C --&amp;gt;|Two| E[iPhone] C --&amp;gt;|Three| F[fa:fa-car Car] flowchart TD A[Christmas] -->|Get money| B(Go shopping) B --> C{Let me think} C -->|One| D[Laptop] C -->|Two| E[iPhone] C -->|Three| F[fa:fa-car Car] stateDiagram-v2 [*] --> Still Still --> [*] Still --> Moving Moving --> Still Moving --> Crash Crash --> [*] Flowchart Cheatsheet flowchart TD A[Start] --> B{Is it?</description></item><item><title>Complexity of Algorithms</title><link>https://bkleinen.github.io/stagingdrafts/material/complexity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/complexity/</guid><description>Video-Kurs: Unit: Logarithms from Khan Academy</description></item><item><title>Gilded Rose Code Kata</title><link>https://bkleinen.github.io/stagingdrafts/material/gildedrose/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/gildedrose/</guid><description/></item><item><title>GIT Intro</title><link>https://bkleinen.github.io/stagingdrafts/material/git-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/git-intro/</guid><description>Source Code Management mit GIT Für Info2 hatte ich im letzten Semester eine GIT-Introduction aufgenomen:
(Zugänglich mit HTW-Login)
Part 1 - Basics and a simple git workflow: Repository anlegen, commit, push, pull, clone Part 2 - committing the right files: git status, git add, index Part 3 - Stolpersteine: andere machen Änderungen! - merge conflicts, vi als editor Part 4 - Adding SSH Keys and copying Repos from Github to Gitlab Seither habe ich gelernt, dass die Beispiele meiner commit messages nicht gut gewählt waren.</description></item><item><title>Hugo Cheatsheet</title><link>https://bkleinen.github.io/stagingdrafts/material/hugo/hugocheatsheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/hugo/hugocheatsheet/</guid><description>Shortcodes and Partials Difference: Shortcodes can be included in Markdown, partials only in Layouts. For reuse (usage of partials both in layout templates and directly from markdown) a shortcode needs to be defined that references the partial.
Partial Templates | Hugo
Documentation Shortcodes | Hugo Create Your Own Shortcodes | Hugo Shortcodes Syntax: example:
{{&amp;lt;alert warning&amp;gt;}} warning level alert {{&amp;lt;/alert&amp;gt;}}
warning level alert &amp;ndash;
Render Markdown Some Markdown: - a - b **highlight** Some Markdown:</description></item><item><title>Hugo Markdown</title><link>https://bkleinen.github.io/stagingdrafts/material/hugo/markdown/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/hugo/markdown/</guid><description>This is something in between a playground and a cheatsheet for hugo markdown.
https://www.markdownguide.org/
https://www.markdownguide.org/tools/hugo/
Ordered Lists https://www.markdownguide.org/basic-syntax#ordered-lists
One Ident Sublists 4 Spaces or 1 Tab more Numbering does not have to be correct in the source But the first number matters second 42 is not a 42 Without a one it is not even recognized as a list 42. But the first number matters 42. second 42 is not a 43 Two Code in Lists One Ident Sublists 4 Spaces or 1 Tab more Numbering does not have to be correct in the source But the first number matters</description></item><item><title>IntelliJ</title><link>https://bkleinen.github.io/stagingdrafts/material/intellij/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/intellij/</guid><description>Learn IntelliJ There is now a guided way to learn this complex tool - this video introduces it:
Learn IntelliJ IDEA (2021) - YouTube Code Formatting As soon as you share code using Source Code Management (e.g. Git), you should take care that everyone in the team uses the same code formatting - otherwise changes in formatting will make it hard to track and understand the real changes.
Reformat and rearrange code | IntelliJ IDEA Code Formatting | The IntelliJ IDEA Blog</description></item><item><title>Refactoring e-learning</title><link>https://bkleinen.github.io/stagingdrafts/material/sw-design/refactoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/sw-design/refactoring/</guid><description>You already know refactoring since Info1 - we spent quite some time refactoring the Zuul project!
This e-learning is about exploring and understanding refactoring in more depth.
The resource on refactoring:
Fowler, Martin: Refactoring: Improving the Design of Existing Code, Addison Wesley Object Technology Series, 1999.
Ruby edition:
Jay Fields, Shane Harvie, and Martin Fowler: Refactoring Ruby Edition. Addison Wesley, 2009.
The latter is discussed in the Ruby Rouges Podcast #178.</description></item><item><title>Regular Expressions</title><link>https://bkleinen.github.io/stagingdrafts/material/regex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/regex/</guid><description>Try out Regex Javascript: regex101: build, test, and debug regex</description></item><item><title>Software Design Patterns</title><link>https://bkleinen.github.io/stagingdrafts/material/sw-design/patterns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/sw-design/patterns/</guid><description>&amp;hellip;</description></item><item><title>Sorting Algorithms</title><link>https://bkleinen.github.io/stagingdrafts/material/algorithms/sorting-algorithms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/algorithms/sorting-algorithms/</guid><description>..
Algorithm Description Invariant Plus O(n) Comparisions Swaps Stable adaptive space Selection Sort select smallest from rest, append to already sorted on left a[1..i] in place n^2 n^2 n not stable Insertion Sort take card from unsorted pile (right), insert it into sorted pile a[1..i] sorted adaptable, simple -&amp;gt; ok for small n n^2 n^2 n^2 stable yes O(1) extra Shell Sort Insertion sort on every h-th element decreasing h down to 1 each h-array is sorted adaptable, still simple n^(3/2) stable yes O(1) extra Bubble Sort go up through array, compare two and swap if not in right order (up to 1.</description></item><item><title>Troubleshooting</title><link>https://bkleinen.github.io/stagingdrafts/material/web-technology/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/web-technology/troubleshooting/</guid><description>Troubleshooting Steps for Rails The Rails Framework consists of a complex combination of various tools. There is no compilation step, everything is started from the command line.
As a consequence, things break at runtime, providing you with an informative stack trace and error message that help you find the problem.
You need to learn how to read those stack traces and error messages.
Here are some pointers how to do it:</description></item></channel></rss>