<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>java on STAGING DRAFTS --- Prof. Dr. Barne Kleinen</title><link>https://bkleinen.github.io/stagingdrafts/material/tags/java/</link><description>Recent content in java on STAGING DRAFTS --- Prof. Dr. Barne Kleinen</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 24 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://bkleinen.github.io/stagingdrafts/material/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Conditional Statement</title><link>https://bkleinen.github.io/stagingdrafts/material/info1-script/01_basics/conditional/</link><pubDate>Sat, 21 Oct 2023 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/info1-script/01_basics/conditional/</guid><description>Conditional Statement (if-then-else statement) A conditional statement allows you to conditionally execute code parts based on a condition, either true or false or something that results in true or false (see boolean expression).
Structure // before conditional if(condition){ // if-part } else { // else-part } // after conditional flowchart TD A[Start] B(before conditional) D(if-part) E(else-part) F(after conditional) A --> B B --> C{condition true?} C --true--> D C -->|false| E D &amp; E --> F F -->G[End] The else part can be omitted&amp;hellip; &amp;hellip; if you don&amp;rsquo;t need it.</description></item><item><title>While Loop</title><link>https://bkleinen.github.io/stagingdrafts/material/info1-script/01_basics/while-loop/</link><pubDate>Tue, 24 Oct 2023 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/info1-script/01_basics/while-loop/</guid><description>While Loop Structure // before loop while(condition){ // loop body } // after loop shorter flowchart TD S[Start] C{cond?} L(LOOP BODY) E(End) S --> C C --true?--> L L --> C C -->|false?| E longer version flowchart TD A[Start] B(before loop) L(loop body) F(after loop) A --> B B --> C{condition true?} L --> C C --true--> L C -->|false| F F -->G[End] ## Examples ## Further Reading https://docs.oracle.com/javase/tutorial/java/nutsandbolts/while.html</description></item><item><title>IntelliJ</title><link>https://bkleinen.github.io/stagingdrafts/material/intellij/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/intellij/</guid><description>Learn IntelliJ There is now a guided way to learn this complex tool - this video introduces it:
Learn IntelliJ IDEA (2021) - YouTube Code Formatting As soon as you share code using Source Code Management (e.g. Git), you should take care that everyone in the team uses the same code formatting - otherwise changes in formatting will make it hard to track and understand the real changes.
Reformat and rearrange code | IntelliJÂ IDEA Code Formatting | The IntelliJ IDEA Blog</description></item></channel></rss>