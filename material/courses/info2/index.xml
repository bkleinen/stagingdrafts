<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>info2 on STAGING DRAFTS --- Prof. Dr. Barne Kleinen</title><link>https://bkleinen.github.io/stagingdrafts/material/courses/info2/</link><description>Recent content in info2 on STAGING DRAFTS --- Prof. Dr. Barne Kleinen</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 09 Oct 2021 18:56:38 +0200</lastBuildDate><atom:link href="https://bkleinen.github.io/stagingdrafts/material/courses/info2/index.xml" rel="self" type="application/rss+xml"/><item><title>Backus-Naur-Form</title><link>https://bkleinen.github.io/stagingdrafts/material/languages/bnf/</link><pubDate>Fri, 08 Oct 2021 21:32:10 +0200</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/languages/bnf/</guid><description>The Gist You might see something like&amp;hellip;.
if your repository is
https://github.com/&amp;lt;organisation&amp;gt;/&amp;lt;repo&amp;gt; the entry in your .git/config would be
[remote &amp;quot;origin&amp;quot;] url = git@github.com:&amp;lt;organisation&amp;gt;/&amp;lt;repo&amp;gt;.git Where \&amp;lt;organisation\&amp;gt; should be replaced with the github organisation, e.g. &amp;ldquo;htw-imi-info2&amp;rdquo; and \&amp;lt;repo\&amp;gt; with the name of the respective git repository, e.g. &amp;ldquo;python-jupyter-notebooks&amp;rdquo;, yielding at this concrete text:
https://github.com/htw-imi-info2/python-jupyter-notebooks [remote &amp;quot;origin&amp;quot;] url = git@github.com:htw-imi-info2/python-jupyter-notebooks.git Rewrite Rules The convention of informally marking placeholders that should be replaced with the delimiters &amp;lt; and &amp;gt; stems from the Backus-Naur-Form (BNF).</description></item><item><title>Python Intro</title><link>https://bkleinen.github.io/stagingdrafts/material/languages/python/</link><pubDate>Fri, 08 Oct 2021 21:32:10 +0200</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/languages/python/</guid><description>&amp;hellip;. content to come</description></item><item><title>Python Resources</title><link>https://bkleinen.github.io/stagingdrafts/material/languages/python-resources/</link><pubDate>Sat, 09 Oct 2021 18:56:38 +0200</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/languages/python-resources/</guid><description>The Official Python Documentation The Python Tutorial — Python 3.10.0 documentation unittest — Unit testing framework — Python 3.10.0 documentation 6. Modules — Python 3.10.0 documentation Books Robert Sedgewick, Kevin Wayne, Robert Dondero: Introduction to Programming in Python: An Interdisciplinary Approach. Pearson, 2015
The linked companion website contains excerpts and lots of examples:
Elements of Programming Functions and Modules Object Oriented Programming Algorithms and Data Structures Automate the Boring Stuff with Python</description></item><item><title>GIT Intro</title><link>https://bkleinen.github.io/stagingdrafts/material/git-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/git-intro/</guid><description>Source Code Management mit GIT Für Info2 hatte ich im letzten Semester eine GIT-Introduction aufgenomen:
(Zugänglich mit HTW-Login)
Part 1 - Basics and a simple git workflow: Repository anlegen, commit, push, pull, clone Part 2 - committing the right files: git status, git add, index Part 3 - Stolpersteine: andere machen Änderungen! - merge conflicts, vi als editor Part 4 - Adding SSH Keys and copying Repos from Github to Gitlab Seither habe ich gelernt, dass die Beispiele meiner commit messages nicht gut gewählt waren.</description></item><item><title>IntelliJ</title><link>https://bkleinen.github.io/stagingdrafts/material/intellij/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/intellij/</guid><description>Learn IntelliJ There is now a guided way to learn this complex tool - this video introduces it:
Learn IntelliJ IDEA (2021) - YouTube Code Formatting As soon as you share code using Source Code Management (e.g. Git), you should take care that everyone in the team uses the same code formatting - otherwise changes in formatting will make it hard to track and understand the real changes.</description></item><item><title>Regular Expressions</title><link>https://bkleinen.github.io/stagingdrafts/material/regex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bkleinen.github.io/stagingdrafts/material/regex/</guid><description>Try out Regex Javascript: regex101: build, test, and debug regex</description></item></channel></rss>